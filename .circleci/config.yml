version: 2 # use CircleCI 2.0
jobs: # a collection of steps
  build: # runs not using Workflows must have a `build` job as entry point

    working_directory: ~/circleci-spring5-recipe-app # directory where steps will run

    docker: # run the steps with Docker
    - image: circleci/openjdk:11-jdk-browsers # ...with this image as the primary container; this is where all `steps` will run

    steps: # a collection of executable commands

    - checkout # check out source code to working directory

    - restore_cache: # restore the saved cache after the first run or if `pom.xml` has changed
        # Read about caching dependencies: https://circleci.com/docs/2.0/caching/
        key: circleci-spring5-recipe-app-{{ checksum "pom.xml" }}

    - run: mvn dependency:go-offline # gets the project dependencies

    - save_cache: # saves the project dependencies
        paths:
        - ~/.m2
        key: circleci-spring5-recipe-app-{{ checksum "pom.xml" }}

    - run: mvn package verify cobertura:cobertura # run the actual tests

    # uploads the test metadata from the `target/surefire-reports` directory so that it can show up in the CircleCI dashboard.
    # Upload test results for display in Test Summary: https://circleci.com/docs/2.0/collect-test-data/
    - run:
        name: Save unit test results
        command: |
          mkdir -p ~/junit/
          find . -type f -regex ".*/target/surefire-reports/.*xml" -exec cp {} ~/junit/ \;
        when: always
    - store_test_results:
        path: ~/junit
    - store_artifacts:
        path: ~/junit

    - run:
        name: Save integration test results
        command: |
          mkdir -p ~/failsafe/
          find . -type f -regex ".*/target/failsafe-reports/.*xml" -exec cp {} ~/failsafe/ \;
        when: always
    - store_test_results:
        path: ~/failsafe
    - store_artifacts:
        path: ~/failsafe

    - store_artifacts: # store the uberjar as an artifact
        # Upload test summary for display in Artifacts: https://circleci.com/docs/2.0/artifacts/
        path: target/spring5-recipe-app-0.0.1-SNAPSHOT.jar
    # See https://circleci.com/docs/2.0/deployment-integrations/ for deploy examples

    - run:
        name: Send to CodeCov
        environment:
          CODECOV_TOKEN: acf68a36-0781-4262-a55b-b3aaab7c1c3e
        command: curl -s https://codecov.io/bash | bash